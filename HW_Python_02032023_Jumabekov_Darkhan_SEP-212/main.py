from alternative_task_1 import gallows
from alternative_task_2 import create_reliable_password

'''
1. Списки

'''
def task_1():

    #a) Создайте два списка в диапазоне (0, 100) с шагом 10. Присвойте некоторым переменным значения этих списков.
    lst1 = list(x for x in range(0, 100, 10))
    lst2 = list(x for x in range(0, 100, 10))
    print(f'список 1: {lst1}')
    print(f'список 2: {lst2}')
    var1 = lst1[3]
    var2 = lst2[7]
    second_element = lst1[1]
    print(f'lst1[3]: {var1}, lst2[7] : {var2}')

    #b) Извлеките из первого списка второй элемент.
    print(f'второй элемент первого списка: {second_element}')

    #c) Измените во втором списке последний объект на число <200>. Выведите список на экран.
    lst2[len(lst2)-1] = 200
    print(f'>>> измените во втором списке последний объект на число <200>\nсписок 2: {lst2}')

    #d) Соедините оба списка в один, присвоив результат новой переменной. Выведите получившийся список на экран.
    merge_lst1_lst2 = lst1 + lst2
    print(f'>>> соедините оба списка в один, присвоив результат новой переменной\nсписок 3: {merge_lst1_lst2}')

    #e) Возьмите срез из соединённого списка так, чтобы туда попали некоторые части
    # обоих первых списков. Срез свяжите с очередной новой переменной.
    # Выведите значение этой переменной.
    lst4 = merge_lst1_lst2[3:9:2] #берем элементы с 3 до 9 индекса через одну
    print(f'>>> Возьмите срез из соединённого списка\nсписок 4: {lst4}')

    #f) Добавьте в список-срез два новых элемента и снова выведите его.
    lst4.append(777)
    lst4.append(888)
    print(f'>>> Добавьте в список-срез два новых элемента\nсписок 4: {lst4}')

    #g) С помощью функций min() и max() найдите и выведите элементы объединённого списка с максимальным и минимальным значением.
    min_element = min(merge_lst1_lst2)
    max_element = max(merge_lst1_lst2)
    print(f'min: {min_element} max: {max_element} объединённого списка: {merge_lst1_lst2}')


if __name__ == '__main__':
    task_1()
    # gallows()
    # create_reliable_password()
